from junit_xml import TestSuite, TestCase
import traceback
import re
import html

test_cases = [TestCase('Cell Test', 'Notebook_name', 123.345, 'I am stdout!', 'I am stderr!', file='./this.py')]
ts=[TestSuite("Notebook Tests", test_cases, package="Notebooks")]

with open('output.xml', 'w') as f:
    TestSuite.to_file(f, ts, prettyprint=False)
    f.close()

s = "Traceback (most recent call last):&#10;  File &quot;/Users/jalexander/miniconda3/envs/notebooks/lib/python3.6/site-packages/nbpages/converter.py&quot;, line 108, in execute&#10;    executor.preprocess(nb, {'metadata': {'path': self.path_only}})&#10;  File &quot;/Users/jalexander/miniconda3/envs/notebooks/lib/python3.6/site-packages/nbconvert/preprocessors/execute.py&quot;, line 354, in preprocess&#10;    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)&#10;  File &quot;/Users/jalexander/miniconda3/envs/notebooks/lib/python3.6/site-packages/nbconvert/preprocessors/base.py&quot;, line 69, in preprocess&#10;    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)&#10;  File &quot;/Users/jalexander/miniconda3/envs/notebooks/lib/python3.6/site-packages/nbconvert/preprocessors/execute.py&quot;, line 378, in preprocess_cell&#10;    raise CellExecutionError.from_cell_and_msg(cell, out)&#10;nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:&#10;------------------&#10;obs_table = Observations.query_criteria(obs_id='ib2j02n5qAAAAAAA', obstype='all')&#10;download_tab = Observations.download_products(obs_table['obsid'], mrp_only=False, &#10;                                              productSubGroupDescription=['FLC'])&#10;------------------&#10;&#10;---------------------------------------------------------------------------&#10;ValueError                                Traceback (most recent call last)&#10;&lt;ipython-input-2-8c8103d5057f&gt; in &lt;module&gt;&#10;      1 obs_table = Observations.query_criteria(obs_id='ib2j02n5qAAAAAAA', obstype='all')&#10;      2 download_tab = Observations.download_products(obs_table['obsid'], mrp_only=False, &#10;----&gt; 3                                               productSubGroupDescription=['FLC'])&#10;&#10;~/miniconda3/envs/notebooks/lib/python3.6/site-packages/astroquery/mast/core.py in download_products(self, products, download_dir, cache, curl_flag, mrp_only, **filters)&#10;   1740                 productLists.append(self.get_product_list(oid))&#10;   1741 &#10;-&gt; 1742             products = vstack(productLists)&#10;   1743 &#10;   1744         # apply filters&#10;&#10;~/miniconda3/envs/notebooks/lib/python3.6/site-packages/astropy/table/operations.py in vstack(tables, join_type, metadata_conflicts)&#10;    285         6   8&#10;    286     &quot;&quot;&quot;&#10;--&gt; 287     tables = _get_list_of_tables(tables)  # validates input&#10;    288     if len(tables) == 1:&#10;    289         return tables[0]  # no point in stacking a single table&#10;&#10;~/miniconda3/envs/notebooks/lib/python3.6/site-packages/astropy/table/operations.py in _get_list_of_tables(tables)&#10;     46     # Make sure there is something to stack&#10;     47     if len(tables) == 0:&#10;---&gt; 48         raise ValueError('no values provided to stack.')&#10;     49 &#10;     50     # Convert inputs (Table, Row, or anything column-like) to Tables.&#10;&#10;ValueError: no values provided to stack.&#10;ValueError: no values provided to stack.&#10;&#10;"

s = html.unescape(s)
